name: 'Testing'

on:
  pull_request:
    paths-ignore:
      - '*.md'
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'

permissions:
  contents: read

jobs:
  lint-format:
    name: Check lint and format
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #windows-latest,
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout the repository.
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci
      - run: npm run lint
      - run: npm run format:check

  unit-test:
    name: Unit test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #windows-latest,
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout the repository.
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci
      - run: npm test

  workflow-test:
    name: Workflow test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #windows-latest,
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout the repository.
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run auto version
        uses: ./
        id: auto-version
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Print details from auto-version-action
        run: |
          echo "latest-tagged-version: ${{ steps.auto-version.outputs.latest-tagged-version }}"
          echo "latest-tagged-version-name: ${{ steps.auto-version.outputs.latest-tagged-version-name }}"
          echo "latest-tagged-version-sha: ${{ steps.auto-version.outputs.latest-tagged-version-sha }}"
          echo "version-spec: ${{ steps.auto-version.outputs.version-spec }}"
          echo "auto-version: ${{ steps.auto-version.outputs.auto-version }}"
      - name: Print exported env
        run: |
          echo "PREV_VERSION: $PREV_VERSION"
          echo "PREV_VERSION_NAME: $PREV_VERSION_NAME"
          echo "PREV_VERSION_SHA: $PREV_VERSION_SHA"
          echo "AUTO_VERSION: $AUTO_VERSION"
        if: ${{ runner.os == 'Linux' }}
      - name: Print exported env
        run: |
          Write-Host "PREV_VERSION: ${env:PREV_VERSION}"
          Write-Host "PREV-VERSION_NAME: ${env:PREV_VERSION_NAME}"
          Write-Host "PREV-VERSION_SHA: ${env:PREV_VERSION:SHA}"
          Write-Host "AUTO-VERSION: ${env:AUTO_VERSION}"
        if: ${{ runner.os == 'Windows' }}
